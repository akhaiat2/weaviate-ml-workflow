'use strict';
Object.defineProperty(exports, '__esModule', { value: true });
exports.parseQuantizer = exports.parseWithDefault = exports.QuantizerGuards = void 0;
class QuantizerGuards {
  static isPQCreate(config) {
    return (config === null || config === void 0 ? void 0 : config.type) === 'pq';
  }
  static isPQUpdate(config) {
    return (config === null || config === void 0 ? void 0 : config.type) === 'pq';
  }
  static isBQCreate(config) {
    return (config === null || config === void 0 ? void 0 : config.type) === 'bq';
  }
  static isBQUpdate(config) {
    return (config === null || config === void 0 ? void 0 : config.type) === 'bq';
  }
}
exports.QuantizerGuards = QuantizerGuards;
function parseWithDefault(value, defaultValue) {
  return value !== undefined ? value : defaultValue;
}
exports.parseWithDefault = parseWithDefault;
const parseQuantizer = (config) => {
  if (config === undefined) {
    return undefined;
  }
  if (QuantizerGuards.isPQCreate(config)) {
    return Object.assign(Object.assign({}, config), { type: 'pq' });
  } else if (QuantizerGuards.isBQCreate(config)) {
    return Object.assign(Object.assign({}, config), { type: 'bq' });
  }
  return config;
};
exports.parseQuantizer = parseQuantizer;
